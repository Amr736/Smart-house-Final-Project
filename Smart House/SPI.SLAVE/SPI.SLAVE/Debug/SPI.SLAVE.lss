
SPI.SLAVE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000022a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000027e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000027e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  000002ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b81  00000000  00000000  000003ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006fc  00000000  00000000  00000f2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000586  00000000  00000000  00001629  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000012c  00000000  00000000  00001bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000425  00000000  00000000  00001cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000043c  00000000  00000000  00002101  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  0000253d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 db 00 	call	0x1b6	; 0x1b6 <main>
  64:	0c 94 13 01 	jmp	0x226	; 0x226 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPinDir>:
		case DIO_PORTC :
		PORTC ^= 0xff;
		break;
		
		case DIO_PORTD :
		PORTD ^= 0xff;
  6c:	44 23       	and	r20, r20
  6e:	b9 f1       	breq	.+110    	; 0xde <DIO_SetPinDir+0x72>
  70:	41 30       	cpi	r20, 0x01	; 1
  72:	09 f0       	breq	.+2      	; 0x76 <DIO_SetPinDir+0xa>
  74:	6b c0       	rjmp	.+214    	; 0x14c <DIO_SetPinDir+0xe0>
  76:	81 30       	cpi	r24, 0x01	; 1
  78:	89 f0       	breq	.+34     	; 0x9c <DIO_SetPinDir+0x30>
  7a:	28 f0       	brcs	.+10     	; 0x86 <DIO_SetPinDir+0x1a>
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	c9 f0       	breq	.+50     	; 0xb2 <DIO_SetPinDir+0x46>
  80:	83 30       	cpi	r24, 0x03	; 3
  82:	11 f1       	breq	.+68     	; 0xc8 <DIO_SetPinDir+0x5c>
  84:	08 95       	ret
  86:	2a b3       	in	r18, 0x1a	; 26
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	02 c0       	rjmp	.+4      	; 0x92 <DIO_SetPinDir+0x26>
  8e:	88 0f       	add	r24, r24
  90:	99 1f       	adc	r25, r25
  92:	6a 95       	dec	r22
  94:	e2 f7       	brpl	.-8      	; 0x8e <DIO_SetPinDir+0x22>
  96:	82 2b       	or	r24, r18
  98:	8a bb       	out	0x1a, r24	; 26
  9a:	08 95       	ret
  9c:	27 b3       	in	r18, 0x17	; 23
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_SetPinDir+0x3c>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_SetPinDir+0x38>
  ac:	82 2b       	or	r24, r18
  ae:	87 bb       	out	0x17, r24	; 23
  b0:	08 95       	ret
  b2:	24 b3       	in	r18, 0x14	; 20
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_SetPinDir+0x52>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_SetPinDir+0x4e>
  c2:	82 2b       	or	r24, r18
  c4:	84 bb       	out	0x14, r24	; 20
  c6:	08 95       	ret
  c8:	21 b3       	in	r18, 0x11	; 17
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SetPinDir+0x68>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SetPinDir+0x64>
  d8:	82 2b       	or	r24, r18
  da:	81 bb       	out	0x11, r24	; 17
  dc:	08 95       	ret
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	91 f0       	breq	.+36     	; 0x106 <DIO_SetPinDir+0x9a>
  e2:	28 f0       	brcs	.+10     	; 0xee <DIO_SetPinDir+0x82>
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	d9 f0       	breq	.+54     	; 0x11e <DIO_SetPinDir+0xb2>
  e8:	83 30       	cpi	r24, 0x03	; 3
  ea:	29 f1       	breq	.+74     	; 0x136 <DIO_SetPinDir+0xca>
  ec:	08 95       	ret
  ee:	2a b3       	in	r18, 0x1a	; 26
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_SetPinDir+0x8e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_SetPinDir+0x8a>
  fe:	80 95       	com	r24
 100:	82 23       	and	r24, r18
 102:	8a bb       	out	0x1a, r24	; 26
 104:	08 95       	ret
 106:	27 b3       	in	r18, 0x17	; 23
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_SetPinDir+0xa6>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	6a 95       	dec	r22
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_SetPinDir+0xa2>
 116:	80 95       	com	r24
 118:	82 23       	and	r24, r18
 11a:	87 bb       	out	0x17, r24	; 23
 11c:	08 95       	ret
 11e:	24 b3       	in	r18, 0x14	; 20
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_SetPinDir+0xbe>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_SetPinDir+0xba>
 12e:	80 95       	com	r24
 130:	82 23       	and	r24, r18
 132:	84 bb       	out	0x14, r24	; 20
 134:	08 95       	ret
 136:	21 b3       	in	r18, 0x11	; 17
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_SetPinDir+0xd6>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_SetPinDir+0xd2>
 146:	80 95       	com	r24
 148:	82 23       	and	r24, r18
 14a:	81 bb       	out	0x11, r24	; 17
 14c:	08 95       	ret

0000014e <DIO_TogglePin>:
	}
}

void DIO_TogglePin(uint8 Port, uint8 Pin)
{
	switch (Port)
 14e:	81 30       	cpi	r24, 0x01	; 1
 150:	89 f0       	breq	.+34     	; 0x174 <DIO_TogglePin+0x26>
 152:	28 f0       	brcs	.+10     	; 0x15e <DIO_TogglePin+0x10>
 154:	82 30       	cpi	r24, 0x02	; 2
 156:	c9 f0       	breq	.+50     	; 0x18a <DIO_TogglePin+0x3c>
 158:	83 30       	cpi	r24, 0x03	; 3
 15a:	11 f1       	breq	.+68     	; 0x1a0 <DIO_TogglePin+0x52>
 15c:	08 95       	ret
	{
		case DIO_PORTA :
		Toggle_BIT(PORTA , Pin);
 15e:	2b b3       	in	r18, 0x1b	; 27
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <DIO_TogglePin+0x1c>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	6a 95       	dec	r22
 16c:	e2 f7       	brpl	.-8      	; 0x166 <DIO_TogglePin+0x18>
 16e:	82 27       	eor	r24, r18
 170:	8b bb       	out	0x1b, r24	; 27
		break;
 172:	08 95       	ret
		
		case DIO_PORTB :
		Toggle_BIT(PORTB , Pin);
 174:	28 b3       	in	r18, 0x18	; 24
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_TogglePin+0x32>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_TogglePin+0x2e>
 184:	82 27       	eor	r24, r18
 186:	88 bb       	out	0x18, r24	; 24
		break;
 188:	08 95       	ret
		
		case DIO_PORTC :
		Toggle_BIT(PORTC , Pin);
 18a:	25 b3       	in	r18, 0x15	; 21
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_TogglePin+0x48>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	6a 95       	dec	r22
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_TogglePin+0x44>
 19a:	82 27       	eor	r24, r18
 19c:	85 bb       	out	0x15, r24	; 21
		break;
 19e:	08 95       	ret
		
		case DIO_PORTD :
		Toggle_BIT(PORTD , Pin);
 1a0:	22 b3       	in	r18, 0x12	; 18
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_TogglePin+0x5e>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	6a 95       	dec	r22
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_TogglePin+0x5a>
 1b0:	82 27       	eor	r24, r18
 1b2:	82 bb       	out	0x12, r24	; 18
 1b4:	08 95       	ret

000001b6 <main>:
int main(void)
{
	uint8 rx_data = 0;
	uint8 tx_data=0;
	
	DIO_SetPinDir(DIO_PORTC , DIO_PIN1 , DIO_PIN_OUTPUT);
 1b6:	41 e0       	ldi	r20, 0x01	; 1
 1b8:	61 e0       	ldi	r22, 0x01	; 1
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
	DIO_SetPinDir(DIO_PORTC , DIO_PIN2 , DIO_PIN_OUTPUT);
 1c0:	41 e0       	ldi	r20, 0x01	; 1
 1c2:	62 e0       	ldi	r22, 0x02	; 2
 1c4:	82 e0       	ldi	r24, 0x02	; 2
 1c6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
	SPI_Slave_Init();
 1ca:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <SPI_Slave_Init>
	
    while (1) 
    {
		rx_data = SPI_TranSiver(tx_data);
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	0e 94 0e 01 	call	0x21c	; 0x21c <SPI_TranSiver>
		
		if(rx_data == 49)
 1d4:	81 33       	cpi	r24, 0x31	; 49
 1d6:	29 f4       	brne	.+10     	; 0x1e2 <main+0x2c>
		{
			DIO_TogglePin(DIO_PORTC , DIO_PIN1);
 1d8:	61 e0       	ldi	r22, 0x01	; 1
 1da:	82 e0       	ldi	r24, 0x02	; 2
 1dc:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_TogglePin>
 1e0:	f6 cf       	rjmp	.-20     	; 0x1ce <main+0x18>
			rx_data = 0;
		}
		else if(rx_data == 50)
 1e2:	82 33       	cpi	r24, 0x32	; 50
 1e4:	a1 f7       	brne	.-24     	; 0x1ce <main+0x18>
		{
			DIO_TogglePin(DIO_PORTC , DIO_PIN2);
 1e6:	62 e0       	ldi	r22, 0x02	; 2
 1e8:	82 e0       	ldi	r24, 0x02	; 2
 1ea:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_TogglePin>
 1ee:	ef cf       	rjmp	.-34     	; 0x1ce <main+0x18>

000001f0 <SPI_Slave_Init>:
{
	DIO_SetPinValue(DIO_PORTB , DIO_PIN4 , DIO_PIN_LOW);
}
void SPI_Master_TermTrans(void)
{
	DIO_SetPinValue(DIO_PORTB , DIO_PIN4 , DIO_PIN_HIGH);
 1f0:	41 e0       	ldi	r20, 0x01	; 1
 1f2:	66 e0       	ldi	r22, 0x06	; 6
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 1fa:	40 e0       	ldi	r20, 0x00	; 0
 1fc:	65 e0       	ldi	r22, 0x05	; 5
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 204:	40 e0       	ldi	r20, 0x00	; 0
 206:	67 e0       	ldi	r22, 0x07	; 7
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 20e:	40 e0       	ldi	r20, 0x00	; 0
 210:	64 e0       	ldi	r22, 0x04	; 4
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 218:	6e 9a       	sbi	0x0d, 6	; 13
 21a:	08 95       	ret

0000021c <SPI_TranSiver>:

uint8 SPI_TranSiver(uint8 data)
{
	uint8 rec_data = 0;
	
	SPI->SPDR = data;
 21c:	8f b9       	out	0x0f, r24	; 15
	
	while(GET_BIT(SPI->SPSR , 7) == 0);
 21e:	77 9b       	sbis	0x0e, 7	; 14
 220:	fe cf       	rjmp	.-4      	; 0x21e <SPI_TranSiver+0x2>
	
	rec_data  = SPI->SPDR ;
 222:	8f b1       	in	r24, 0x0f	; 15
	
	return rec_data;
 224:	08 95       	ret

00000226 <_exit>:
 226:	f8 94       	cli

00000228 <__stop_program>:
 228:	ff cf       	rjmp	.-2      	; 0x228 <__stop_program>
